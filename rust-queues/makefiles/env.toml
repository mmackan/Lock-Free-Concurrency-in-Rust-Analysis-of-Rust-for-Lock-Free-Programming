[env]
# Parameters for fixed operations benchmark
LOGN = "7"

# Parameters for fixed threads benchmark
THREADS  = "8"
MIN_LOGN = "4"
MAX_LOGN = "8"

# Divdes the available cores
FACTOR = "2" 

# Directories
BASE_DIR    = "${PWD}"
C_MSQ_DIR   = "${BASE_DIR}/../c-reference"
C_LPRQ_DIR  = "${BASE_DIR}/../c++-reference"
RUST_DIR    = "${BASE_DIR}"
SCRIPT_DIR  = "${BASE_DIR}/../hyperfine_scripts"
RESULT_DIR  = "${BASE_DIR}/../benchmark-results"

# Scripts to plot final results
PARAM_PLOT = "plot_parametrized.py"

# Results from pairwise benchmark (thread scan)
C_LPRQ_PW_JSON_T    = "lprq_c_pairwise_threads.json"
C_MSQ_PW_JSON_T     = "msq_c_pairwise_threads.json"
RUST_LPRQ_PW_JSON_T = "lprq_rust_pairwise_threads.json"
RUST_MSQ_PW_JSON_T  = "msq_rust_pairwise_threads.json"

# Results from pairwise benchmark (operation scan)
C_LPRQ_PW_JSON_O    = "lprq_c_pairwise_ops.json"
C_MSQ_PW_JSON_O     = "msq_c_pairwise_ops.json"
RUST_LPRQ_PW_JSON_O = "lprq_rust_pairwise_ops.json"
RUST_MSQ_PW_JSON_O  = "msq_rust_pairwise_ops.json"

# Results from producers-consumers benchmarks (thread scan)
C_LPRQ_PC_JSON_T    = "lprq_c_pc_threads.json"
C_MSQ_PC_JSON_T     = "msq_c_pc_threads.json"
RUST_LPRQ_PC_JSON_T = "lprq_rust_pc_threads.json"
RUST_MSQ_PC_JSON_T  = "msq_rust_pc_threads.json"

# Results from producers-consumers benchmarks (operation scan)
C_LPRQ_PC_JSON_O    = "lprq_c_pc_ops.json"
C_MSQ_PC_JSON_O     = "msq_c_pc_ops.json"
RUST_LPRQ_PC_JSON_O = "lprq_rust_pc_ops.json"
RUST_MSQ_PC_JSON_O  = "msq_rust_pc_ops.json"

# Graph output (thread scan)
MSQ_GRAPH_PW_T  = "graph_threads_pairwise_msq"
LPRQ_GRAPH_PW_T = "graph_threads_pairwise_lprq"
MSQ_GRAPH_PC_T  = "graph_threads_pc_msq"
LPRQ_GRAPH_PC_T = "graph_threads_pc_lprq"

# Graph output (operation scan)
MSQ_GRAPH_PW_O  = "graph_ops_pairwise_msq"
LPRQ_GRAPH_PW_O = "graph_ops_pairwise_lprq"
MSQ_GRAPH_PC_O  = "graph_ops_pc_msq"
LPRQ_GRAPH_PC_O = "graph_ops_pc_lprq"