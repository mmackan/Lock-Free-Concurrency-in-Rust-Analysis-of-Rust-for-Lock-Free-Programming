extend = [
    {path = "msq_benchmarks.toml"},
    {path = "lprq_benchmarks.toml"}
]

# Pairwise benchmarking, threads varies, fixed operations
[tasks.parameter-scan-pairwise-threads]
description = "Hyperfine parameter scan over threads"
script = [
    "export MAX_THREADS=$(($(nproc) / FACTOR))",
    "echo '\n'===========================================",
    "echo Parameter scan over threads",
    "echo ' ' Benchmark: $TARGET",
    "echo ' ' Interval: [1, ${MAX_THREADS}]",
    "echo ' ' Operations: 10^${LOGN}",
    "echo ' ' Even cores only: ${EVEN_CORES}'\n'",
    "hyperfine --parameter-scan Threads 1 ${MAX_THREADS} '${BINARY} {Threads} ${LOGN} ${EVEN_CORES}' --export-json ${RESULT_DIR}/$JSON"
]
private = true


# Pairwise benchmarking, operations varies, fixed threads 
[tasks.parameter-scan-pairwise-ops]
description = "Hyperfine parameter scan over operations"
script = [
    "echo '\n'===========================================",
    "export THREADS=$(($(nproc) / (FACTOR*2)))",
    "echo Parameter scan over logn",
    "echo ' ' Benchmark: $TARGET",
    "echo ' ' Interval: [${MIN_LOGN}, ${MAX_LOGN}]",
    "echo ' ' Threads: ${THREADS}",
    "echo ' ' Even cores only: ${EVEN_CORES}'\n'",
    "hyperfine --parameter-scan Operations ${MIN_LOGN} ${MAX_LOGN} '${BINARY} ${THREADS} {Operations} ${EVEN_CORES}' --export-json ${RESULT_DIR}/$JSON"
]
private = true

# MPMC benchmark, thread varies, fixed operations
[tasks.parameter-scan-mpmc]
description = "Base MPMC benchmark parameter scan"
script_runner = "bash"
script = [
    "export MAX_THREADS=$(($(nproc) / FACTOR))",
    "export MAX_ITER=$((MAX_THREADS / $DIVISOR))",
    "echo '\n'===========================================",
    "echo Parameter scan over threads",
    "echo ' ' Benchmark: $TARGET",
    "echo ' ' Interval: [${MIN_THREADS}, ${MAX_THREADS}]",
    "echo ' ' Operations: 10^$LOGN",
    "echo ' ' Even cores only: ${EVEN_CORES}'\n'",
    "bash ./makefiles/ratio_benchmarks.sh ${RATIO} ${MAX_ITER}"

]
private = true
